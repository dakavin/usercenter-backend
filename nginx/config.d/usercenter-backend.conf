server {
    # 监听 443 https 端口 , 启用 HTTP/2 协议。HTTP/2 是 HTTP 协议的下一版本，它引入了一些性能优化
    # 例如多路复用（Multiplexing）和头部压缩，以提高页面加载速度。
    listen 443 ssl http2;
    # 域名，修改成你自己的
    server_name usercenter-backend.dakkk.top;
    # 设置客户端最大可上传的体积
    client_max_body_size 100M;

    # Nginx 容器中的 SSL 证书和密钥路径（后续会挂载到宿主机的 /docker/nginx/cert/ 目录下）
    ssl_certificate /etc/nginx/cert/usercenter-backend-cert/usercenter-backend.dakkk.top_bundle.pem;
    ssl_certificate_key  /etc/nginx/cert/usercenter-backend-cert/usercenter-backend.dakkk.top.key;
    # SSL 会话设置
    ssl_session_timeout 5m;
    # 设置安全的 SSL 加密套件
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    # 启用的 TLS 版本
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # 优先使用服务器的密码套件
    ssl_prefer_server_ciphers on;
    # 启用 HSTS（HTTP Strict Transport Security）
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    location / {
       # 将所有流量代理到内网 IP 的 8080 端口
       proxy_pass http://172.17.0.1:8080;
       # 设置请求头部，将客户端的主机信息传递给后端服务
       proxy_set_header Host $host;
       # 设置请求头部，传递客户端的真实 IP 地址给后端服务
       proxy_set_header X-Real-IP $remote_addr;
       # 设置请求头部，添加客户端的 IP 地址到 X-Forwarded-For，用于追踪原始请求者
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       # 设置请求头部，传递原始请求的 host 和端口，有助于后端服务识别请求来源
       proxy_set_header X-Host $host:$server_port;
       # 设置请求头部，传递客户端请求使用的协议 (如 http 或 https)
       proxy_set_header X-Scheme $scheme;
       # 设置请求头部，用于 WebSocket 支持，允许客户端与服务器进行 WebSocket 连接
       proxy_set_header Upgrade $http_upgrade;
       # 设置请求头部，用于 WebSocket 支持，保持连接状态为 "upgrade"
       proxy_set_header Connection "upgrade";
       # 设置代理连接的超时时间为 30 秒，如果在此时间内无法连接到后端，连接将被关闭
       proxy_connect_timeout 30s;
       # 设置代理读取的超时时间为 86400 秒（一天），如果在此时间内后端没有响应，请求将被关闭
       proxy_read_timeout 86400s;
       # 设置代理发送的超时时间为 30 秒，如果在此时间内无法向后端发送数据，连接将被关闭
       proxy_send_timeout 30s;
       # 设置代理使用的 HTTP 版本，这里指定使用 HTTP/1.1
       proxy_http_version 1.1;
    }

    # 错误页面处理
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # 后端项目没必要开启gzip
}